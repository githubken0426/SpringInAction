<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" 
	xmlns="http://java.sun.com/xml/ns/javaee" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	
  <welcome-file-list>
    <welcome-file>index.jsp</welcome-file>
  </welcome-file-list>
  
 <context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:spring/chapter_09SpringSecurity/xml/applicationContext.xml</param-value>
 </context-param>
 <!-- Spring Security会话控制 -->
  <listener>  
        <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>  
    </listener>  
    
  <!-- 注意:最好将DelegatingFilterProxy写在DispatcherServlet之前.否则 SpringSecurity可能不会正常工作. -->
  <filter>
  	<filter-name>springSecurityFilterChain</filter-name>
  	<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
  	<filter-name>springSecurityFilterChain</filter-name>
  	<url-pattern>/*</url-pattern>
  </filter-mapping>
  
  <servlet>
	    <servlet-name>springMvc</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
	    <init-param>
	      <param-name>contextConfigLocation</param-name>
	      <param-value>classpath:spring/chapter_09SpringSecurity/xml/spring_mvc.xml</param-value>
	    </init-param>
	    <load-on-startup>1</load-on-startup>
  	</servlet>	
  	<servlet-mapping>
  		<servlet-name>springMvc</servlet-name>
  		<url-pattern>*.do</url-pattern>
  	</servlet-mapping>
  <!--  直接使用SpringMVC是可以不添加applicationContext.xml文件的。
  		使用applicationContext.xml文件时是需要在web.xml中添加此listener
  		一般是采用非spring mvc架构，如使用struts之类而又想引入spring才添加的，这个是用来加载Application Context-->
  <listener>
	<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
   <listener>
	<listener-class>org.springframework.web.util.IntrospectorCleanupListener</listener-class>
  </listener>
  
  	<filter>  
        <filter-name>Character Encoding</filter-name>  
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>  
        <init-param>  
            <param-name>encoding</param-name>  
            <param-value>UTF-8</param-value>  
        </init-param>  
    </filter>  
    <filter-mapping>  
        <filter-name>Character Encoding</filter-name>  
        <url-pattern>/*</url-pattern>  
    </filter-mapping>
</web-app>
