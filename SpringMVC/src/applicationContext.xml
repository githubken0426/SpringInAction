<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans        
    						http://www.springframework.org/schema/beans/spring-beans-2.5.xsd        
    						http://www.springframework.org/schema/context        
   							http://www.springframework.org/schema/context/spring-context-2.5.xsd
   							http://www.springframework.org/schema/tx    
          					http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
     						http://www.springframework.org/schema/aop 
     						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
   							http://www.springframework.org/schema/mvc  
						    http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 扫描所有包 -->
	<context:component-scan base-package="org.ken.fsd" />
	<!-- 默认的注解映射的支持 -->
	<context:annotation-config />
	<!-- aop:aspectj-autoproxy将会在spring上下文中创建一个AnnotationAwareAspectJAutoProxyCreator代理类，
     	  他会自动代理一些使用@Aspect注解的bean中定义的切点相匹配。 -->
     <aop:aspectj-autoproxy/>
     <!-- 静态资源映射 -->
     <mvc:resources location="/resources/js" mapping="/resources/**"/>
     
    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<!--  JstlView将请求传递给jsp，她还会公布特定的jstl请求属性，使用jstl国际化支持-->
    	<property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
    </bean>
    
	<!-- 读取属性文件 -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="true">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:/jdbc.properties</value>
			</list>
		</property>
	</bean>
	
	<!-- c3p0数据源配置 常用的dbcp、dbcp-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${datasource.driverClassName}" />
		<property name="jdbcUrl" value="${datasource.url}" />
		<property name="user" value="${datasource.username}" />
		<property name="password" value="${datasource.password}" />
		<property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
		<property name="initialPoolSize" value="${c3p0.initialPoolSize}" />
		<property name="minPoolSize" value="${c3p0.minPoolSize}" />
		<property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
		<property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
		<property name="maxStatements" value="${c3p0.maxStatements}" />
		<property name="maxIdleTimeExcessConnections" value="${c3p0.maxIdleTimeExcessConnections}" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" value="classpath*:org/**/*Mapper.xml" />
		<!-- <property name="annotationClass" value="org.springframework.stereotype.Repository" /> -->
	</bean>

	<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="org.**.dao" />
	</bean>


	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="do*" propagation="REQUIRED" />
			<tx:method name="operation*" propagation="REQUIRED" />
			<tx:method name="user*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="upd*" propagation="REQUIRED" />
			<tx:method name="enable*" propagation="REQUIRED" />
			<tx:method name="sync*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<!-- 切面配置 -->
	<aop:config>
		<aop:pointcut expression="execution (* org.ken.fsd.service.*.*(..))" id="services" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="services" />
	</aop:config>

	<!-- 拦截器 -->
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<mvc:exclude-mapping path="/resources/**" />
			<mvc:exclude-mapping path="/v1/open/**" />
			<bean class="org.ken.fsd.inteceptor.ApiSignInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 全局异常配置 -->
	<bean id="exceptionResolver" class="org.ken.fsd.exception.MyExceptionHandler" />
	<!-- 上传文件的支持 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="2147483648" />
		<property name="resolveLazily" value="true" />
	</bean>

	<!-- 针对 json数据 转码 -->
	<mvc:annotation-driven>
	<mvc:message-converters register-defaults="true">
		<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
			<property name="objectMapper">
				<bean class="com.fasterxml.jackson.databind.ObjectMapper">
					<!--驼峰转下划线 -->
					<property name="propertyNamingStrategy">
						<bean class="com.fasterxml.jackson.databind.PropertyNamingStrategy.LowerCaseWithUnderscoresStrategy" />
					</property>
					<!-- ALWAYS默认,NON_DEFAULT属性为默认值不序列化,NON_EMPTY属性为空""或者为 NULL都不序列化,NON_NULL属性为NULL不序列化 -->
					<property name="serializationInclusion">
						<value type="com.fasterxml.jackson.annotation.JsonInclude.Include">ALWAYS</value>
					</property>
				</bean>
			</property>
			<property name="supportedMediaTypes">
				<list>
					<value>application/json;charset=UTF-8</value>
					<value>text/html;charset=UTF-8</value>
					<value>application/x-www-form-urlencoded</value>
				</list>
			</property>
		</bean>
	</mvc:message-converters>
</mvc:annotation-driven>
</beans>